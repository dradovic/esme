@page "/login"
@layout LoginLayout
@inject IUriHelper uriHelper
@inject AuthenticationState state

<form onsubmit="@OnSubmit">
    <label for="inputUsername" class="sr-only">User Name</label>
    <input id="inputUsername" class="form-control" placeholder="Username" required autofocus bind="@loginParameters.UserName" />

    <label for="inputPassword" class="sr-only">Password</label>
    <input type="password" id="inputPassword" class="form-control" placeholder="Password" required bind="@loginParameters.Password" />

    <div class="form-check m-3">
        <input type="checkbox" id="inputRememberMe" class="form-check-input" bind="@loginParameters.RememberMe" />
        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
    </div>

    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

    <label class="text-danger">@error</label>
</form>

@functions{

    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await state.Login(loginParameters);
            uriHelper.NavigateTo("");
        }
        catch (Exception x)
        {
            error = x.Message;
        }
    }
}